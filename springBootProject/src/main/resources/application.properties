# web 설정
# port 번호 설정
server.port=8888
# default context-path는 /
server.servlet.context-path=/app
app.title=shinhan

# DB 연결
# table을 자동으로 생성할 것인가?
# 큰규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다
# 처음 생성 시 create, 기존 테이블은 새로 만들지 않음 
spring.jpa.hibernate.ddl-auto=update
# DDL 생성 시 DB 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=false
# 실행되는 SQL문을 보여줄 것인가?
spring.jpa.show-sql=true
# Oracle DB 설정
# Dialect(방언): Hibernate는 DB에 맞게 SQL문을 생성하기 위해 방언을 사용한다.
# -> Oracle이면 Oracle의 내용, MySQL이면 MySQL의 내용 ex) MySQL은 Auto Increment 존재, Oracle은 시퀀스 존재하는데 어떤 것을 사용할 것인가?
# (우리는 JPA 구현체 중 Hibernate 사용할 것)
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost/xe
spring.datasource.username=hr
spring.datasource.password=hr
spring.jpa.database=oracle
logging.level.org.hibernate=info
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

# ThymeLeaf
# STS 툴에서는 설정 함, 패킹시 default로 되도록 다 막아버리기
# Thymeleaf 설정: 설정 없어도 기본 설정에 의해 수행 가능은 함 -> 원래 안해도 됨
# spring.thymeleaf.enabled=true
# templates 하위에 있는 페이지를 사용하겠다
# spring.thymeleaf.prefix=classpath:templates/
# spring.thymeleaf.check-template-location=true
# 확장자는 default로 HTML
# spring.thymeleaf.suffix=.html
# 개발 시 false를 사용하는 것이 좋음 (캐시 사용 X) -> 운영 시 true로 설정
# spring.thymeleaf.cache=false

# @ControllerAdvice를 사용할 때 에러처리 시 static과 충돌되기 때문에 false로 변경 
# spring.web.resources.add-mappings=false

# multipart 설정
spring.servlet.multipart.location=c:\\temp
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB